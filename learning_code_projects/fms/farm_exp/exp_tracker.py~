from tkinter import *
from tkinter import messagebox
import sqlite3
import time

def connect():
    conn=sqlite3.connect("loginpage.db")
    cur=conn.cursor()
    cur.execute("CREATE TABLE IF NOT EXISTS users(name TEXT,username TEXT,password TEXT)")
    conn.commit()
    conn.close()
connect()

def viewallusers():
    conn=sqlite3.connect("loginpage.db")
    cur=conn.cursor()
    cur.execute("SELECT * FROM users")
    rows=cur.fetchall()
    conn.commit()
    conn.close()   
    return rows

def adduser(name,username,password):
    conn=sqlite3.connect("loginpage.db")
    cur=conn.cursor()
    cur.execute("INSERT INTO users VALUES(?,?,?)",(name,username,password))
    conn.commit()
    conn.close()

def deleteallusers():
    conn=sqlite3.connect("loginpage.db")
    cur=conn.cursor()
    cur.execute("DELETE FROM users")
    conn.commit()
    conn.close()
    messagebox.showinfo('Successful', 'All users deleted')

def checkuser(username,password):
    conn=sqlite3.connect("loginpage.db")
    cur=conn.cursor()
    cur.execute("SELECT * FROM users WHERE username=? AND password=?",(username,password))
    result=cur.fetchone()
    return result

def getusername(username,password):
    conn=sqlite3.connect("loginpage.db")
    cur=conn.cursor()
    cur.execute("SELECT * FROM users WHERE username=? AND password=?",(username,password))
    result=cur.fetchone()
    global profilename
    if result!=None:
        profilename=result[0]

def viewwindow():
    gui = Toplevel(root)
    gui.title("VIEW ALL USERS")
    gui.geometry("800x700")
    Message(gui,font=("Castellar", 22, "bold"),text = "NAME      USERNAME      PASSWORD",width=700).pack()
    for row in viewallusers():
        a=row[0]
        b=row[1]
        c=""
        f=len(row[2])
        for i in range (f):
            c= c + "*"
        d = a + "         " + b + "           " + c
        Message(gui,fg='#6680ff',font=("adobe clean", 25, "bold"),text = d,width=700).pack()
    Button(gui,text="Exit Window",font=("candara",15,"bold"),activebackground="#fffa66",activeforeground="red",width=10,command=gui.destroy).pack()
    
def register():
    a = register_name.get()
    b = register_username.get()
    c = register_password.get()
    d = register_repassword.get()
    if c==d and c!="" and len(c)>5 and a!="" and b!="":
        adduser(a,b,c)
        messagebox.showinfo(':)', 'Registration Successful')      
    else :
        if(a=="" or b=="" or c=="" or d==""):
            messagebox.showinfo('oops something wrong', 'Field should not be empty')
        else:
            messagebox.showinfo('oops something wrong', 'Both passwords should be same! \nPassword should contain atleast 6 characters')
    e3.delete(0,END)
    e4.delete(0,END)
    e5.delete(0,END)
    e6.delete(0,END)

def login():
    a = login_username.get()
    b = login_password.get()
    getusername(a,b)   
    if (checkuser(a,b))!=None:
        root.destroy()
        appwindow()     
    else:
        e1.delete(0,END)
        e2.delete(0,END)
        messagebox.showinfo('oops something wrong', 'Invalid credentials')

profilename=""
t = 11
def appwindow():

    def connect1():
        conn=sqlite3.connect("expenseapp.db")
        cur=conn.cursor()
        cur.execute("CREATE TABLE IF NOT EXISTS expensetable(id INTEGER PRIMARY KEY,itemname TEXT,date TEXT,cost TEXT)")
        conn.commit()
        conn.close()
    connect1()

    def insert(itemname,date,cost):
        conn=sqlite3.connect("expenseapp.db")
        cur=conn.cursor()
        cur.execute("INSERT INTO expensetable VALUES(NULL,?,?,?)",(itemname,date,cost))
        conn.commit()
        conn.close()

    def view():
        conn=sqlite3.connect("expenseapp.db")
        cur=conn.cursor()
        cur.execute("SELECT * FROM expensetable")
        rows=cur.fetchall()
        conn.commit()
        conn.close()
        return rows
    
    def search(itemname="",date="",cost=""):
        conn=sqlite3.connect("expenseapp.db")
        cur=conn.cursor()
        cur.execute("SELECT *FROM expensetable WHERE itemname=? OR date=? OR cost=?",(itemname,date,cost))
        rows=cur.fetchall()
        conn.commit()
        conn.close()
        return rows

    def delete(id):
        conn=sqlite3.connect("expenseapp.db")
        cur=conn.cursor()
        cur.execute("DELETE FROM expensetable WHERE id=?",(id))
        conn.commit()
        conn.close()
    
    def deletealldata():
        conn=sqlite3.connect("expenseapp.db")
        cur=conn.cursor()
        cur.execute("DELETE FROM expensetable")
        conn.commit()
        conn.close()
        list1.delete(0,END)
        messagebox.showinfo('Successful', 'All data deleted')

    def sumofitems():
        conn=sqlite3.connect("expenseapp.db")
        cur=conn.cursor()
        cur.execute("SELECT SUM(cost) FROM expensetable")
      c=exp_cost.get()
        d=c.replace('.', '', 1)
        e=b.count('-')      

        if a=="" or b=="" or c=="":
            messagebox.showinfo("oops something wrong","Field should not be empty")
        elif len(b)!=10 ore(a)
    
    def search_item():
        list1.delete(0,END)
        list1.insert(END,"ID   NAME     DATE      COST")
        for row in search(exp_itemname.get(),exp_date.get(),exp_cost.get()):
            a=str(row[0])
            b=str(row[1])
            c=str(row[2])
 nt=fbfbf",text="This window auomatically closes after")
        h.place(x=65,y=650)
        ltime=Label(gui,font=("century",25),bg="#bfbfbf",fg="black")
        ltime.place(x=655,y=651)      
nd="#fffa66",activeforeground="red",width=10,command=insertitems).place(x=30,y=300)
    b2=Button(gui,text="View all items",font=("georgia",17),activebackground="#fffa66",activeforeground="red",width=12,command=viewallitems).place(x=11   l6=Label(gui,width=60,font=("century",35),bg="#ff9999",fg="#b32d00",text="EXPENSE  TRACKER").place(x=-450,y=0)
    name = "Welcome, " + profilename
    l9=Label(gui,width=60,font=("century",30),bg="#9999ff",fg="black",text=name).place(x=-530,y=61)
    ltime=Label(gui,font=("c,fon9),bg="#0066ff",text="Password").place(x=80,y=280)
b1=Button(root,text="Login",font=("algerian",19),activebackground="#fffa66",activeforeground="red",width=12,command=login).place(x=110,y=36ngVnt=("adobe clean",15),textvariable=register_name)
e6.place(x=740,y=200,height=25,width=165)
register_username=StringVar()
e3=Entry(root,font=("adobe clean",15),textvariable=register_username)
e3.place(x=740,y=250,height=25,width=165)
register_password=StringVar()
e4=Entry(root,font=("adobe clean",15),textvariable=register_password, show="*")
e4.place(x=740,y=300,height=25,width=165)
register_repassword=StringVar()
e5=Entry(root,font=("adobe clean",15),textvariable=register_repassword, show="*")
e5.place(x=740,y=350,height=25,width=165)
Label(root,width=60,font=("jokerman",35),bg="#ff9999",fg="#cc2900",text="EXPENSE  TRA,width=12,command=deleteallusers).place(x=130,y=620)
b5=Button(root,text="View all users",font=("candara",15,"bold"),activebackground="#fffa66",activeforeground="red",width=12,comma
